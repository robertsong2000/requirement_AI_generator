version: '3.8'

services:
  # 后端 API 服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: requirement_ai_backend
    ports:
      - "8005:8005"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL:-https://api.openai.com/v1}
      - OPENAI_MODEL_NAME=${OPENAI_MODEL_NAME:-gpt-3.5-turbo}
      - TEMPERATURE=${TEMPERATURE:-0.7}
      - TOP_P=${TOP_P:-1.0}
      - MAX_TOKENS=${MAX_TOKENS:-4000}
    volumes:
      - ./prompts:/app/prompts:ro
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - requirement-generator-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 前端开发服务
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: requirement_ai_frontend_dev
    ports:
      - "5174:5174"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
    networks:
      - requirement-generator-network
    restart: unless-stopped
    profiles:
      - dev

  # 前端生产服务 (Nginx)
  frontend-prod:
    image: nginx:alpine
    container_name: requirement_ai_frontend_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./frontend/dist:/usr/share/nginx/html:ro
      - ./frontend/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - requirement-generator-network
    profiles:
      - prod

  # Redis (可选，用于缓存和会话存储)
  redis:
    image: redis:7-alpine
    container_name: requirement_ai_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - requirement-generator-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - redis

volumes:
  redis_data:
    driver: local
  node_modules:

networks:
  requirement-generator-network:
    driver: bridge